name: build
on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Install build dependencies
        run: bun install --frozen-lockfile
      - name: Create .env file
        run: |
          touch .env
          echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> .env
          echo PUBLIC_FACILITY_NAME="$PUBLIC_FACILITY_NAME" >> .env
          echo VATUSA_FACILITY_ID="$VATUSA_FACILITY_ID" >> .env
          echo PUBLIC_VATSIM_OAUTH_BASE="$PUBLIC_VATSIM_OAUTH_BASE" >> .env
          echo PUBLIC_VATSIM_OAUTH_CLIENT_ID="$PUBLIC_VATSIM_OAUTH_CLIENT_ID" >> .env
          echo PUBLIC_VATSIM_OAUTH_REDIRECT_URL="$PUBLIC_VATSIM_OAUTH_REDIRECT_URL" >> .env
          echo VATSIM_OAUTH_CLIENT_SECRET="${{ secrets.VATSIM_OAUTH_CLIENT_SECRET }}" >> .env
          echo VATUSA_API_BASE="$VATUSA_API_BASE" >> .env
          echo VATUSA_API_KEY="${{ secrets.VATUSA_API_KEY }}" >> .env
          echo MAX_BOOKING_AHEAD_DAYS="$MAX_BOOKING_AHEAD_DAYS" >> .env
          echo SMTP_HOST="${{ secrets.SMTP_HOST }}" >> .env
          echo SMTP_PORT="${{ secrets.SMTP_PORT }}" >> .env
          echo SMTP_SECURE="${{ secrets.SMTP_SECURE }}" >> .env
          echo SMTP_AUTH_USER="${{ secrets.SMTP_AUTH_USER }}" >> .env
          echo SMTP_AUTH_PASS="${{ secrets.SMTP_AUTH_PASS }}" >> .env
          echo SMTP_EMAIL_FROM="${{ secrets.SMTP_EMAIL_FROM }}" >> .env
      - name: Build production bundle
        run: bun --bun run build